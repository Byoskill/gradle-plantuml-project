/**
 * Available tasks for the project
 *
 * <ul>
 *     <li>createOutputFolder</li> : task to create the output folder
 *     <li>listPML : list the available plant uml in the </li>
 *     <li>findOutdatedPML : list the PML that requires an update. </li>
 *     <li>buildPlantuml : build all the plantUml files</li>
 *     <li>plantUmlTest : test PlantUml installation</li>*
 *     <li>plantUmlGui : test PlantUml installation</li>*
 *     <li>displayImages : display the list of images</li>
 * </ul>
 */
import com.byoskill.ListPMLTask

ext {
    sourceFolder = 'src/plantuml'
    outputFolder = 'build/plantuml'
}


public class FindOutdatedPML extends DefaultTask {

    @InputDirectory
    File buildFolder

    @InputFiles
    def diagrams;

    @TaskAction
    public findPMLToGenerate() {

    }

}

public class CreateOutputFolderTask extends DefaultTask {
    
    @Input
    String outputFolderPath;

    @OutputDirectory
    File outputFolder = new File("build/plantuml")

    @TaskAction
    public buildOutputFolder() {
        new File(outputFolderPath).mkdirs();
        outputFolder = new File(outputFolderPath)
        println "Plantuml generation folder created in ${outputFolder}"
    }

}


def createOutputTask = tasks.register("createOutputFolder", CreateOutputFolderTask) {
    group = "PlantUML"
    description = "Creates the output folder if necessary"
    outputFolderPath = project.file(project.outputFolder).getAbsolutePath()
}


// Implémenter avec un listFiles
// Puis avec un files()
// Puis aprŝ avec un fileTree
def listPML = tasks.register('listPML', ListPMLTask) {
    group = 'PlantUML'
    description = 'List the available diagrams'

    sourceFolder = file(project.sourceFolder)
}

// https://tomgregory.com/gradle-task-inputs-and-outputs/

// Task extraction with https://docs.gradle.org/current/userguide/custom_tasks.html
tasks.register("findOutdatedPML", FindOutdatedPML) {
    group = 'PlantUML'
    description = 'Find the outdated diagrams'
    dependsOn createOutputTask, listPML

    buildFolder = createOutputTask.get().outputFolder
    diagrams = listPML.get().diagrams;
}

task buildPlantUml {
    group = 'PlantUML'
    description = 'Build all PlantUML present diagrams'
}

task plantUmlTest {
    group = 'PlantUML'
    description = 'Test the PlantUML installation'
}

task plantUmlGui {
    group = 'PlantUML'
    description = 'Display the PlantUML Gui'
}

task displayImages {
    group = 'PlantUML'
    description = 'Display the PlantUML generated images'

}
